manifest {
  description = 'Yes'
  author = 'Jason Steen'
  homePage = 'https://github.com/scwatts/reddog-nf'
  nextflowVersion = '>=20.01.0'
}


def time_mod(time, attempt) {(attempt == 1) ? time : (time + (attempt * (time / 2)))}
def memory_mod(memory, attempt) {(attempt == 1) ? memory : (memory + (attempt * (memory / 2)))}


slurm_account = 'vh83'
normal_option = '--qos=normal --account=' + slurm_account
shortq_option = '--qos=shortq --account=' + slurm_account

singularity {
    enabled = true
}

profiles {
    slurm {
        executor {
           name = 'slurm'
           queueSize = 200
           pollInterval = '30 sec'
        }
        process {
            executor = 'slurm'
            stageInMode = 'symlink'
            errorStrategy = 'retry'
            maxRetries = 5
            cache = 'lenient'

            withLabel: small_short {
                cpus = 1
                memory = { memory_mod(1.GB, task.attempt) } 
                time = { time_mod(5.minute, task.attempt) }
                queue = 'short'
                clusterOptions = shortq_option
            }
            
            withLabel: small_1 {
                cpus = 1
                memory = { memory_mod(4.GB, task.attempt) } 
                time = { time_mod(30.minute, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option
            }

            withLabel: small_2 {
                cpus = 2
                memory = { memory_mod(2.GB, task.attempt) } 
                time = { time_mod(1.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option
            }

            withLabel: small_3 {
                cpus = 2
                memory = { memory_mod(16.GB, task.attempt) } 
                time = { time_mod(2.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option
            }

            withLabel: medium_6h {
                cpus = 1
                memory = { memory_mod(16.GB, task.attempt) } 
                time = { time_mod(6.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }
            
            withLabel: big_6h {
                cpus = 1
                memory = { memory_mod(32.GB, task.attempt) } 
                time = { time_mod(6.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }
            
            withLabel: medium_1h {
                cpus = 1
                memory = { memory_mod(16.GB, task.attempt) } 
                time = { time_mod(1.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }

            withLabel: bwa {
                cpus = 12
                memory = { memory_mod(32.GB, task.attempt) } 
                time = { time_mod(12.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option    
            }

            withLabel: bwa_small {
                cpus = 4
                memory = { memory_mod(16.GB, task.attempt) } 
                time = { time_mod(2.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option    
                container = 'https://depot.galaxyproject.org/singularity/bwa:0.7.17--h84994c4_4'
            }

            withLabel: vardict {
                cpus = 6
                memory = { memory_mod(32.GB, task.attempt) } 
                time = { time_mod(12.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option    
            }

            withLabel: vardict_small {
                cpus = 1
                memory = { memory_mod(16.GB, task.attempt) } 
                time = { time_mod(4.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }

            withLabel: vep {
                cpus = 12
                memory = { memory_mod(64.GB, task.attempt) } 
                time = { time_mod(12.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option  
            }

            withLabel: gatk_unknown {
                cpus = 8
                memory = { memory_mod(32.GB, task.attempt) } 
                time = { time_mod(12.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }
            
            withLabel: small3h_6g {
                cpus = 8
                memory = { memory_mod(6.GB, task.attempt) } 
                time = { time_mod(3.hour, task.attempt) }
                queue = 'comp'
                clusterOptions = normal_option   
            }
        }
    }
    local {
        executor {
        name = 'local'
        queueSize = 32
        pollInterval = '30 sec'
        }
        process {
            executor = 'local'
            stageInMode = 'symlink'
            errorStrategy = 'retry' 
            maxRetries = 5
            cache = 'lenient'

            withLabel: small_1 {
                cpus = 1
            }

            withLabel: small_2 {
                cpus = 2
            }

            withLabel: vardict {
                cpus = 2
            }
        }
    }
}




