def time_mod(time, attempt) {(attempt == 1) ? time : (time + (attempt * (time / 2)))}
def memory_mod(memory, attempt) {(attempt == 1) ? memory : (memory + (attempt * (memory / 2)))}

process {
    executor = 'slurm'
    stageInMode = 'symlink'
    errorStrategy = 'retry'
    maxRetries = 5
    cache = 'lenient'

    withLabel: small_1 {
        cpus = 1
        memory = { memory_mod(4.GB, task.attempt) } 
        time = { time_mod(10.minute, task.attempt) }
        queue = 'short'
        maxRetries = 3
        clusterOptions = '--account=vh83 --qos=shortq'
    }

    withLabel: small_2 {
        cpus = 2
        memory = { memory_mod(4.GB, task.attempt) } 
        time = { time_mod(10.minute, task.attempt) }
        queue = 'short'
        maxRetries = 3
        clusterOptions = '--account=vh83 --qos=shortq'
    }

    withLabel: medium {
        cpus = 1
        memory = { memory_mod(16.GB, task.attempt) } 
        time = { time_mod(1.hour, task.attempt) }
        queue = 'comp'
        clusterOptions = '--account=vh83 --qos=normal'   
    }
    
    withLabel: large {
        cpus = 2
        memory = { memory_mod(4.GB, task.attempt) } 
        time = { time_mod(10.minute, task.attempt) }
        queue = 'comp'
        clusterOptions = '--account=vh83 --qos=normal'    
    }
}

executor {
    name = 'slurm'
    queueSize = 200
    pollInterval = '30 sec'
}
